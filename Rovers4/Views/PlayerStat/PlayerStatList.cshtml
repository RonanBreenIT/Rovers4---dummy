@model PlayerStatsViewModel

@{
    ViewData["Title"] = "PlayerStatList";
}

<h3>@Model.CurrentPlayer</h3>

<table class="table">
    <tbody>
        @foreach (var staff in Model.Staff)
        {
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(modelItem => staff.DOB)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(modelItem => staff.DOB)
                </dd>
                @if (staff.PlayerPosition != null)
                {
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(modelItem => staff.PlayerPosition)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(modelItem => staff.PlayerPosition)
                    </dd>
                }
                else
                {
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(modelItem => staff.MgmtRole)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(modelItem => staff.MgmtRole)
                    </dd>
                }
                <dd class="col-sm-10">
                    <img src="~/images/@staff.Image" alt="">
                </dd>
            </dl>


        }


        @foreach (var staff in Model.Staff)
        {
            <section>
                <h3 style="padding-top: 2em">
                    Player Biography
                </h3>
                <p>@Html.DisplayFor(modelItem => staff.PersonBio)</p>
            </section>
        }

        @*Should only display header for players*@
        @foreach (var staff in Model.Staff)
        {
            if (staff.PersonType == PersonType.Player)
            {
                <h3 style="padding-top: 2em">Player Statistics</h3>
                if (!Model.HasStats)
                {
                    <a asp-controller="PlayerStat" asp-action="Create">Add Stats</a>
                }
                else
                {
                    <a asp-controller="PlayerStat" asp-action="Edit" asp-route-id="@staff.PersonID">Update Stats</a>
                    <span>&nbsp; &nbsp;| &nbsp; &nbsp;</span>
                    <a asp-controller="PlayerStat" asp-action="Delete" asp-route-id="@staff.PersonID">Delete Stats</a>
                }
            }
        }


        @foreach (var stat in Model.Stats)
        {
            <div class="justify-content-around" >
                <table id="PlayerStatsTable" class="table" cellspacing="0">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(modelItem => stat.GamesPlayed)
                            </th>
                            <th>
                                @Html.DisplayNameFor(modelItem => stat.Goals)
                            </th>
                            <th>
                                @Html.DisplayNameFor(modelItem => stat.Assists)
                            </th>
                       
                            <th>
                                @Html.DisplayNameFor(modelItem => stat.CleanSheet)
                            </th>
                            <th>
                                @Html.DisplayNameFor(modelItem => stat.MotmAward)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => stat.GamesPlayed)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => stat.Goals)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => stat.Assists)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => stat.CleanSheet)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => stat.MotmAward)
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>



            @*<dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(modelItem => stat.GamesPlayed)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(modelItem => stat.GamesPlayed)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(modelItem => stat.Goals)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(modelItem => stat.Goals)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(modelItem => stat.Assists)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(modelItem => stat.Assists)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(modelItem => stat.CleanSheet)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(modelItem => stat.CleanSheet)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(modelItem => stat.MotmAward)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(modelItem => stat.MotmAward)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(modelItem => stat.RedCards)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(modelItem => stat.RedCards)
                </dd>
            </dl>*@
        }

    </tbody>
</table>

<a asp-controller="Team" asp-action="Index">Back to Team List</a>

